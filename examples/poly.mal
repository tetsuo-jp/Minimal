(* $Id: poly.mal,v 1.1 1998/06/15 00:04:55 garrigue Exp $ *)

type poly == float list

fun app_poly (l : poly) x =
  case l of [] => 0.
  | a::l => x *. app_poly l x + a
  end

fun add_poly (l1 : poly) (l2 : poly) : poly =
  case (l1,l2) of
    ([], _) => l2
  | (_, []) => l1
  | (a1::l1, a2::l2) => (a1+a2) :: add_poly l1 l2
  end

fun mul_poly (l1 : poly) (l2 : poly) : poly =
  case l1 of [] => []
  | a1::l1 =>
      add_poly
	(map_list (fn a2 => a1 *. a2) l2)
	(0. :: mul_poly l1 l2)
  end